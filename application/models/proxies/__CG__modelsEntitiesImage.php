<?php

namespace Proxies\__CG__\models\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Image extends \models\Entities\Image implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getImageId()
    {
        $this->__load();
        return parent::getImageId();
    }

    public function getThumb()
    {
        $this->__load();
        return parent::getThumb();
    }

    public function getMedium()
    {
        $this->__load();
        return parent::getMedium();
    }

    public function getBig()
    {
        $this->__load();
        return parent::getBig();
    }

    public function getOriginal()
    {
        $this->__load();
        return parent::getOriginal();
    }

    public function getData()
    {
        $this->__load();
        return parent::getData();
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function getUpdated()
    {
        $this->__load();
        return parent::getUpdated();
    }

    public function setImageId($ImageId)
    {
        $this->__load();
        return parent::setImageId($ImageId);
    }

    public function setThumb($Thumb)
    {
        $this->__load();
        return parent::setThumb($Thumb);
    }

    public function setMedium($Medium)
    {
        $this->__load();
        return parent::setMedium($Medium);
    }

    public function setBig($Big)
    {
        $this->__load();
        return parent::setBig($Big);
    }

    public function setOriginal($Original)
    {
        $this->__load();
        return parent::setOriginal($Original);
    }

    public function setData($Data)
    {
        $this->__load();
        return parent::setData($Data);
    }

    public function setCreated($Created)
    {
        $this->__load();
        return parent::setCreated($Created);
    }

    public function setUpdated($Updated)
    {
        $this->__load();
        return parent::setUpdated($Updated);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'ImageId', 'Thumb', 'Medium', 'Big', 'Original', 'Data', 'Created', 'Updated');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}