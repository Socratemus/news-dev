<?php

namespace Proxies\__CG__\models\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class User extends \models\Entities\User implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getUserId()
    {
        $this->__load();
        return parent::getUserId();
    }

    public function getFirstname()
    {
        $this->__load();
        return parent::getFirstname();
    }

    public function getLastname()
    {
        $this->__load();
        return parent::getLastname();
    }

    public function getUsername()
    {
        $this->__load();
        return parent::getUsername();
    }

    public function getPassword()
    {
        $this->__load();
        return parent::getPassword();
    }

    public function getRealPassword()
    {
        $this->__load();
        return parent::getRealPassword();
    }

    public function getHash()
    {
        $this->__load();
        return parent::getHash();
    }

    public function getAccess()
    {
        $this->__load();
        return parent::getAccess();
    }

    public function getCover()
    {
        $this->__load();
        return parent::getCover();
    }

    public function getQuota()
    {
        $this->__load();
        return parent::getQuota();
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function getUpdated()
    {
        $this->__load();
        return parent::getUpdated();
    }

    public function getComments()
    {
        $this->__load();
        return parent::getComments();
    }

    public function setUserId($UserId)
    {
        $this->__load();
        return parent::setUserId($UserId);
    }

    public function setFirstname($Firstname)
    {
        $this->__load();
        return parent::setFirstname($Firstname);
    }

    public function setLastname($Lastname)
    {
        $this->__load();
        return parent::setLastname($Lastname);
    }

    public function setUsername($Username)
    {
        $this->__load();
        return parent::setUsername($Username);
    }

    public function setPassword($Password)
    {
        $this->__load();
        return parent::setPassword($Password);
    }

    public function setRealPassword($RealPassword)
    {
        $this->__load();
        return parent::setRealPassword($RealPassword);
    }

    public function setHash($Hash)
    {
        $this->__load();
        return parent::setHash($Hash);
    }

    public function setAccess($Access)
    {
        $this->__load();
        return parent::setAccess($Access);
    }

    public function setCover($Cover)
    {
        $this->__load();
        return parent::setCover($Cover);
    }

    public function setQuota($Quota)
    {
        $this->__load();
        return parent::setQuota($Quota);
    }

    public function setCreated($Created)
    {
        $this->__load();
        return parent::setCreated($Created);
    }

    public function setUpdated($Updated)
    {
        $this->__load();
        return parent::setUpdated($Updated);
    }

    public function setComments($Comments)
    {
        $this->__load();
        return parent::setComments($Comments);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'UserId', 'Firstname', 'Lastname', 'Username', 'Password', 'RealPassword', 'Hash', 'Access', 'Quota', 'Created', 'Updated', 'Cover');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}